using System;
using System.Windows.Forms;
using System.IO.Ports; // IO Port to send voice input to Arduino. 
using System.Speech; //.NET library 
using System.Speech.Recognition;
using System.Speech.Synthesis;

namespace SpeechRecogFormsApp1
{
    public partial class Form1 : Form
    {
        SerialPort port = new SerialPort();
        SpeechRecognitionEngine sre = new SpeechRecognitionEngine();
        Choices alphabet = new Choices();


        public Form1()
        {
            InitializeComponent(); 
            port.PortName = "COM3"; 
            port.BaudRate = 9600; 
            processing();
        }

        void processing()
        {
            alphabet.Add(new string[] {"I", "S", "E", "F" , "Exit" });  // letter options, can also do phrases if you want 

            Grammar gr = new Grammar(new GrammarBuilder(alphabet));

            sre.RequestRecognizerUpdate();
            sre.LoadGrammarAsync(gr);
            sre.SetInputToDefaultAudioDevice();
            sre.SpeechRecognized += new EventHandler<SpeechRecognizedEventArgs>(re_SpeechRecognized);


        }

        void re_SpeechRecognized(object sender, SpeechRecognizedEventArgs e)
        {
            switch (e.Result.Text)
            {
                case "I":
                    sendInput('i');
                    textBox.Text += "Cmpleted: "; 
                    break;
                case "S":
                    sendInput('s');
                    textBox.Text += "Completed: ";
                    break;
                case "E":
                    sendInput('e');
                    textBox.Text += "Completed: ";
                    break;
                case "F":
                    sendInput('f');
                    textBox.Text += "Completed: ";
                    break; 
                // to exit program using voice 
                case "Exit":
                    Application.Exit();
                    break;
            }
            textBox.Text += e.Result.Text.ToString() + Environment.NewLine; // updates what letter the computer sees in the Form App
        }

        void sendInput(char character)
        {
            port.Open();
            port.Write(character.ToString());
            port.Close();
        }

        private void buttonOff_Click(object sender, EventArgs e)
        {
            sre.RecognizeAsyncStop();
            buttonOff.Enabled = false;
            buttonOn.Enabled = true;
            MessageBox.Show("Voice Recognition Off", "Information", MessageBoxButtons.OK, MessageBoxIcon.Information);
        }

        private void buttonOn_Click(object sender, EventArgs e)
        {

            sre.RecognizeAsync(RecognizeMode.Multiple);
            buttonOff.Enabled = true;
            buttonOn.Enabled = false;
            MessageBox.Show("Voice Recognition On", "Information", MessageBoxButtons.OK, MessageBoxIcon.Information);
        }
    }
}
